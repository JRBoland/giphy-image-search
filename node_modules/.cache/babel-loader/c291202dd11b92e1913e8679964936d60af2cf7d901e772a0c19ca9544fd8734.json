{"ast":null,"code":"import axios from 'axios';\nexport async function fetchGif(searchTerm, setError) {\n  const API_KEY = 'RCt0VI3GhECXKohyi8zPeUptxfVJcWGr';\n  try {\n    if (!searchTerm || searchTerm.trim) {\n      throw new Error('Nothing has been searched');\n    }\n    const response = await axios.get(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${searchTerm}&limit=5`, {\n      params: {\n        apiKey: API_KEY,\n        q: searchTerm,\n        limit: 5\n      }\n    });\n    console.log('Returned', response.data);\n    return response.data.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      console.error('Error fetching gif data:', error.message);\n      setError(error.message);\n    } else {\n      console.error('Unknown error:', error);\n      setError('An unknown error occurred');\n    }\n    console.log('Error', error);\n    return null;\n  }\n}","map":{"version":3,"names":["axios","fetchGif","searchTerm","setError","API_KEY","trim","Error","response","get","params","apiKey","q","limit","console","log","data","error","isAxiosError","message"],"sources":["/Users/jamesboland/react/devika-baseline-project/baseline-project/src/utils/fetchGifs.tsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchGif(\n  searchTerm: string,\n  setError: (error: string) => void,\n) {\n  const API_KEY = 'RCt0VI3GhECXKohyi8zPeUptxfVJcWGr';\n\n  try {\n    if (!searchTerm || searchTerm.trim) {\n      throw new Error('Nothing has been searched');\n    }\n    const response = await axios.get(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${searchTerm}&limit=5`, {\n      params: {\n        apiKey: API_KEY,\n        q: searchTerm,\n        limit: 5,\n      },\n    });\n    console.log('Returned', response.data);\n    return response.data.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      console.error('Error fetching gif data:', error.message);\n      setError(error.message);\n    } else {\n      console.error('Unknown error:', error);\n      setError('An unknown error occurred');\n    }\n    console.log('Error', error);\n    return null;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,QAAQA,CAC5BC,UAAkB,EAClBC,QAAiC,EACjC;EACA,MAAMC,OAAO,GAAG,kCAAkC;EAElD,IAAI;IACF,IAAI,CAACF,UAAU,IAAIA,UAAU,CAACG,IAAI,EAAE;MAClC,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,gDAA+CJ,OAAQ,MAAKF,UAAW,UAAS,EAAE;MAClHO,MAAM,EAAE;QACNC,MAAM,EAAEN,OAAO;QACfO,CAAC,EAAET,UAAU;QACbU,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEP,QAAQ,CAACQ,IAAI,CAAC;IACtC,OAAOR,QAAQ,CAACQ,IAAI,CAACA,IAAI;EAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIhB,KAAK,CAACiB,YAAY,CAACD,KAAK,CAAC,EAAE;MAC7BH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxDf,QAAQ,CAACa,KAAK,CAACE,OAAO,CAAC;IACzB,CAAC,MAAM;MACLL,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCb,QAAQ,CAAC,2BAA2B,CAAC;IACvC;IACAU,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC;IAC3B,OAAO,IAAI;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}